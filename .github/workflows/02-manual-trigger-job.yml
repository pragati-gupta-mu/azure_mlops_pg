name: Manually trigger an Azure Machine Learning job

on:
  workflow_dispatch:
  pull_request:
      branches: [main]

jobs:
  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - name: Use Python version 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install Flake8
      run: |
        python -m pip install flake8
    - name: Run linting tests
      run: | 
        flake8 src/model/
  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    needs: [linting]
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - name: Use Python version 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run unit tests
      run: | 
        pytest tests/test_train.py
  train-dev:
    name: train
    runs-on: ubuntu-latest
    needs: [unit-test]
    environment:
      name: DEV
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS}}
    - name: Trigger Azure ML job
      run: az ml job create --file src/job.yml --workspace-name  ml_studio_pg --resource-group rg-pragati-gupta
  train-prod:
    runs-on: ubuntu-latest
    needs: [train-dev]
    environment:
      name: PROD
    steps:
      - name: Check out repo
        uses: actions/checkout@main
      - name: Install az ml extension
        run: az extension add -n ml -y
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
      - name: Trigger Azure ML job
        run: az ml job create --file src/job-prod.yml --workspace-name ${{ env.WORKSPACE_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --stream # output job logs to the console
